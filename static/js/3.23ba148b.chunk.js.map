{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","post","message","likesCount","MyPostsText","onSubmit","handleSubmit","name","component","Textarea","textarea","validate","composeValidators","required","maxLengthCreater","btnAddPost","MyPosts","postsElem","posts","map","p","postsBlock","values","addPost","postText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreater","ProfileStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","componentDidUpdate","prevProps","prevState","this","onDoubleClick","onChange","autoFocus","onBlur","type","React","Component","ProfileInfo","profile","bgImg","descriptionBlock","avatar","photos","large","userPhoto","fullName","aboutMe","Preloader","Profile","content","ProfileContainer","userId","match","params","autthorizedUserId","getUsers","setTimeout","getStatus","compose","auth","id","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.23ba148b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"bgImg\":\"ProfileInfo_bgImg__1v8sR\",\"avatar\":\"ProfileInfo_avatar__3xuFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\",\"textarea\":\"MyPosts_textarea__3KLbu\",\"btnAddPost\":\"MyPosts_btnAddPost__1k5rZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"message\":\"Post_message__3raFK\"};","import React from \"react\";\nimport s from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img src=\"https://vesti.ua/wp-content/uploads/2020/05/samaya-krasivaya-devushka-v-mire-528x352.jpg\" />\n      <div className={s.post}>\n        <div className={s.message}>{props.message}</div>\n        <div>\n          <span>like</span> {props.likesCount}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { Field, Form } from \"react-final-form\";\nimport { Textarea } from \"../../../utils/FormsControl/FormsControl\";\nimport {\n  composeValidators,\n  maxLengthCreater,\n  required,\n} from \"../../../utils/validators/validators\";\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\n\nconst MyPosts = (props) => {\n  let postsElem = props.posts.map((p) => (\n    <Post message={p.message} likesCount={p.likesCount} />\n  ));\n\n  let onAddPost = (values) => {\n    props.addPost(values.postText);\n  };\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <MyPostsText onSubmit={onAddPost} />\n\n      <div className={s.posts}>{postsElem}</div>\n    </div>\n  );\n};\n\nconst MyPostsText = (props) => {\n  return (\n    <Form onSubmit={props.onSubmit}>\n      {(props) => (\n        <form onSubmit={props.handleSubmit}>\n          <Field\n            name=\"postText\"\n            component={Textarea}\n            className={s.textarea}\n            validate={composeValidators(required, maxLengthCreater(10))}\n          ></Field>\n\n          <button className={s.btnAddPost}>Add post</button>\n        </form>\n      )}\n    </Form>\n  );\n};\n\nexport default MyPosts;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addPostActionCreater } from \"../../../redux/profile-reduser\";\nimport MyPosts from \"./MyPosts\";\n\n// const MyPostsContainer = (props) => {\n//   return (\n//     <StoreContext.Consumer>\n//       {(store) => {\n//         let state = store.getState();\n\n//         let addPost = () => {\n//           store.dispatch(addPostActionCreater());\n//         };\n\n//         let onPostChange = (text) => {\n//           store.dispatch(updateNewPostTextActionCreater(text));\n//         };\n\n//         return (\n//           <MyPosts\n//             updateNewPostText={onPostChange}\n//             addPost={addPost}\n//             posts={state.profilePage.posts}\n//             newPostText={state.profilePage.newPostText}\n//           />\n//         );\n//       }}\n//     </StoreContext.Consumer>\n//   );\n// };\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (postText) => {\n      dispatch(addPostActionCreater(postText));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport Preloader from \"../../../common/Preloader/Preloader\";\nimport s from \"./ProfileInfo.module.css\";\n\nclass ProfileStatus extends React.Component {\n  // statusInputRef = React.createRef();\n\n  state = {\n    editMode: false,\n    status: this.props.status,\n  };\n\n  activateEditMode = () => {\n    this.setState({\n      editMode: true,\n    });\n  };\n\n  deactivateEditMode = () => {\n    this.setState({\n      editMode: false,\n    });\n    this.props.updateStatus(this.state.status);\n    // debugger;\n  };\n\n  onStatusChange = (e) => {\n    this.setState({\n      status: e.currentTarget.value,\n    });\n  };\n  \n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevProps.status !== this.props.status) {\n      this.setState({ status: this.props.status });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {!this.state.editMode && (\n          <div>\n            <span onDoubleClick={this.activateEditMode}>\n              {this.props.status || \"----\"}\n            </span>\n          </div>\n        )}\n        {this.state.editMode && (\n          <div>\n            <input\n              // ref={this.statusInputRef}\n              onChange={this.onStatusChange}\n              autoFocus={true}\n              onBlur={this.deactivateEditMode}\n              type=\"text\"\n              value={this.state.status}\n            />\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ProfileStatus;\n","import React from \"react\";\nimport Preloader from \"../../../common/Preloader/Preloader\";\nimport s from \"./ProfileInfo.module.css\";\nimport userPhoto from \"../../../assets/user.png\";\nimport ProfileStatus from \"./ProfileStatus\";\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader />;\n  }\n  return (\n    <div>\n      <div className={s.bgImg}>\n        <img src=\"https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350\" />\n      </div>\n      <div className={s.descriptionBlock}>\n        <img\n          className={s.avatar}\n          src={\n            props.profile.photos.large != null\n              ? props.profile.photos.large\n              : userPhoto\n          }\n        />\n        <h3>{props.profile.fullName}</h3>\n        <span>{props.profile.aboutMe}</span>\n        <ProfileStatus\n          status={props.status}\n          updateStatus={props.updateStatus}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport s from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n  return (\n    <div className={s.content}>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { getUsers, getStatus, updateStatus } from \"../../redux/profile-reduser\";\nimport Profile from \"./Profile\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.autthorizedUserId;\n    }\n    this.props.getUsers(userId);\n    setTimeout(() => {\n      this.props.getStatus(userId);\n    }, 1000);\n\n    // ProfileAPI.getUsers(userId).then((data) => {\n    //   this.props.setUserProfile(data);\n    // });\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  autthorizedUserId: state.auth.id,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, { getUsers, getStatus, updateStatus }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}