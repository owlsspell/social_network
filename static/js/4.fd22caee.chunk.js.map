{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","to","id","activeClassName","s","active","src","img","alt","name","Message","className","message","AddMessageForm","onSubmit","handleSubmit","component","Textarea","textarea","cols","rows","placeholder","validate","composeValidators","required","maxLengthCreater","Dialogs","state","dialogsPage","dialogElem","dialogs","map","dialog","messageElem","messages","isAuth","dialogsItems","values","sendMessageText","newMessageText","compose","connect","dispatch","sendMessageTextCreater","withAuthRedirect"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,UAAY,2BAA2B,SAAW,4B,8GCc3MC,EAXE,SAACC,GAChB,OACE,8BACE,eAAC,IAAD,CAASC,GAAI,YAAcD,EAAME,GAAIC,gBAAiBC,IAAEC,OAAxD,UACE,qBAAKC,IAAKN,EAAMO,IAAKC,IAAI,KACzB,+BAAOR,EAAMS,aCGNC,EATD,SAACV,GACb,OACE,sBAAKW,UAAWP,IAAEQ,QAAlB,UACE,qBAAKN,IAAKN,EAAMO,IAAKC,IAAI,KACxBR,EAAMY,Y,+BCuBEC,EArBQ,SAACb,GACtB,OACE,cAAC,IAAD,CAAMc,SAAUd,EAAMc,SAAtB,SACG,SAACd,GAAD,OACC,uBAAMc,SAAUd,EAAMe,aAAtB,UACE,cAAC,IAAD,CACEC,UAAWC,IACXR,KAAK,iBACLE,UAAWP,IAAEc,SACbC,KAAK,MACLC,KAAK,IACLC,YAAY,WACZC,SAAUC,YAAkBC,IAAUC,YAAiB,OAEzD,0JCeKC,EA9BD,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAaF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAAYvB,KAAMuB,EAAOvB,KAAMP,GAAI8B,EAAO9B,GAAIK,IAAKyB,EAAOzB,SAGxD0B,EAAcN,EAAMO,SAASH,KAAI,SAACnB,GAAD,OACnC,cAAC,EAAD,CAASA,QAASA,EAAQA,QAASL,IAAKK,EAAQL,SAOlD,OAAKP,EAAMmC,OAKT,sBAAKxB,UAAWP,IAAE0B,QAAlB,UACE,qBAAKnB,UAAWP,IAAEgC,aAAlB,SAAiCP,IACjC,sBAAKlB,UAAWP,IAAE8B,SAAlB,UACGD,EACD,cAAC,EAAD,CAAgBnB,SAbF,SAACuB,GACnBrC,EAAMsC,gBAAgBD,EAAOE,yBAItB,cAAC,IAAD,CAAUtC,GAAI,YCmBVuC,4BACbC,aAdsB,SAACd,GACvB,MAAO,CACLC,YAAaD,EAAMC,gBAGI,SAACc,GAC1B,MAAO,CACLJ,gBAAiB,SAACC,GAChBG,EAASC,YAAuBJ,SAOpCK,IAFaJ,CAGbd","file":"static/js/4.fd22caee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"mymessage\":\"Dialogs_mymessage__1zYXW\",\"textarea\":\"Dialogs_textarea__PRKXN\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\";\n\nlet DialogItem = (props) => {\n  return (\n    <div>\n      <NavLink to={\"/dialogs/\" + props.id} activeClassName={s.active}>\n        <img src={props.img} alt=\"\" />\n        <span>{props.name}</span>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\nlet Message = (props) => {\n  return (\n    <div className={s.message}>\n      <img src={props.img} alt=\"\" />\n      {props.message}\n    </div>\n  );\n};\n\nexport default Message;\n","import { Field, Form } from \"react-final-form\";\nimport { Textarea } from \"../../utils/FormsControl/FormsControl\";\nimport {\n  composeValidators,\n  maxLengthCreater,\n  required,\n} from \"../../utils/validators/validators\";\nimport s from \"./Dialogs.module.css\";\n\nconst AddMessageForm = (props) => {\n  return (\n    <Form onSubmit={props.onSubmit}>\n      {(props) => (\n        <form onSubmit={props.handleSubmit}>\n          <Field\n            component={Textarea}\n            name=\"newMessageText\"\n            className={s.textarea}\n            cols=\"100\"\n            rows=\"5\"\n            placeholder=\"Write...\"\n            validate={composeValidators(required, maxLengthCreater(50))}\n          />\n          <button>Отправить сообщение</button>\n        </form>\n      )}\n    </Form>\n  );\n};\n\nexport default AddMessageForm;\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Redirect } from \"react-router-dom\";\n\nimport AddMessageForm from \"./AddMessageForm\";\n\nlet Dialogs = (props) => {\n  let state = props.dialogsPage;\n\n  let dialogElem = state.dialogs.map((dialog) => (\n    <DialogItem name={dialog.name} id={dialog.id} img={dialog.img} />\n  ));\n\n  let messageElem = state.messages.map((message) => (\n    <Message message={message.message} img={message.img} />\n  ));\n\n  let addNewMessage = (values) => {\n    props.sendMessageText(values.newMessageText);\n  };\n\n  if (!props.isAuth) {\n    return <Redirect to={\"/login\"} />;\n  }\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogElem}</div>\n      <div className={s.messages}>\n        {messageElem}\n        <AddMessageForm onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { sendMessageTextCreater } from \"../../redux/dialogs-reduser\";\nimport Dialogs from \"./Dialogs\";\n\n// let DialogsContainer = (props) => {\n//   return (\n//     <StoreContext.Consumer>\n//       {(store) => {\n//         let onSendMessageClick = () => {\n//           store.dispatch(sendMessageTextCreater());\n//         };\n\n//         let onNewMessageChange = (text) => {\n//           store.dispatch(updateNewMessageCreater(text));\n//         };\n//         return (\n//           <Dialogs\n//             sendMessageText={onSendMessageClick}\n//             updateNewMessage={onNewMessageChange}\n//             dialogsPage={store.getState().dialogsPage}\n//           />\n//         );\n//       }}\n//     </StoreContext.Consumer>\n//   );\n// };\n\nconst mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessageText: (newMessageText) => {\n      dispatch(sendMessageTextCreater(newMessageText));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}